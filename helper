#!/bin/lua
-- Require "lummander"
local Lummander = require "lummander"
local lfs = require "lfs"

-- Create a lummander instance
local cli = Lummander.new {
	title = "CodeForces Practice Helper",                                            -- <string> title for CLI. Default: ""
	tag = "helper",                                                                  -- <string> CLI Command to execute your program. Default: "".
	description = "A simple Helper script to make practicing with CodeForces easier", -- <string> CLI description. Default: ""
	version = "0.1.1",                                                               -- <string> CLI version. Default: "0.1.0"
	author = "CollCaz",                                                              -- <string> author. Default: ""
	root_path = "",                                                                  -- <string> root_path. Default "". Concat this path to load commands of a subfolder
	theme = "default",                                                               -- Default = "default". "default" and "acid" are built-in themes
	flag_prevent_help = false                                                        -- <boolean> Prevent help message if not command found. Default: false
}

-- Add commands
cli:command("new <link> <name> <rating>", "new practice session")
		:action(function(parsed, _, _)
			local dirName = "./" .. parsed.name .. "/"
			lfs.mkdir(dirName)
			local codeFile = io.open(dirName .. parsed.name .. ".cpp", "w")
			if codeFile ~= nil then
				codeFile:write(
					"#include <iostream>\n" ..
					"using namespace std\n" ..
					"\n" ..
					"int main () {\n\n}"
				)
				codeFile:close()
			end
			local infoFile = io.open(dirName .. "info.txt", "w")
			if infoFile ~= nil then
				infoFile:write(
					"link: " .. parsed.link ..
					"\nrating: " .. parsed.rating ..
					"\ntime started: " .. os.date("%H:%M %a %x")
				)
				infoFile:close()
			end
		end)

cli:command("done")
		:action(function(_, _, _)
			if (io.open("info.txt", "r") ~= nil) then
				local infoFile = io.open("info.txt", "a+")
				if infoFile ~= nil then
					infoFile:write(
						"\ntime finished: " .. os.date("%H:%M %a %x")
					)
					infoFile:close()
				end
			end
		end)

-- Parse and execute the command wrote
cli:parse(arg) -- parse arg and execute if a command was written
